// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTaskApp.Infrastructure.Persistence;

#nullable disable

namespace MyTaskApp.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(MyTaskAppDbContext))]
    [Migration("20241029204239_AddColumnActiveTasks")]
    partial class AddColumnActiveTasks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyTaskApp.Core.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdFatherMenu")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFatherMenu");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "mdi-home",
                            Route = "/",
                            Title = "Home"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "mdi-email",
                            Route = "/projects",
                            Title = "Projetos"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "mdi-check-outline",
                            Route = "/tasks",
                            Title = "Tarefas"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "mdi-monitor-dashboard",
                            Title = "Overview (em breve)"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "mdi-view-dashboard-edit-outline",
                            IdFatherMenu = 4,
                            Title = "Dashboard"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "mdi-chart-line",
                            IdFatherMenu = 4,
                            Title = "Relatório"
                        });
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProject")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProject");

                    b.HasIndex("IdUser");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Bio = "",
                            BirthDate = new DateTime(2022, 10, 29, 20, 42, 38, 568, DateTimeKind.Utc).AddTicks(2290),
                            CreatedAt = new DateTime(2024, 10, 29, 20, 42, 38, 568, DateTimeKind.Utc).AddTicks(2286),
                            Email = "admin@gmail.com",
                            FullName = "MyTaskApp",
                            Password = "admin123",
                            PhoneNumber = "",
                            ProfileImage = "",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.Menu", b =>
                {
                    b.HasOne("MyTaskApp.Core.Entities.Menu", "FatherMenu")
                        .WithMany("SubMenu")
                        .HasForeignKey("IdFatherMenu")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FatherMenu");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.Project", b =>
                {
                    b.HasOne("MyTaskApp.Core.Entities.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.ProjectTask", b =>
                {
                    b.HasOne("MyTaskApp.Core.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("IdProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MyTaskApp.Core.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.Menu", b =>
                {
                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("MyTaskApp.Core.Entities.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
